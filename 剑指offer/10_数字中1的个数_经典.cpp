/*
思路1:
数字k & 0x1 == 1,则count++
再不断>>1,直到数字k=0  （注意:  输入需要先把负数转化正数）

思路2:
数字K & 数字K-1 会将数字K最右侧的1变成零; 统计可以进行多少次操作
while(K){
    ++count;
    K = K & (K-1);
}

拓展:
1.判断数字是不是2的次方  （其二进制只有一位是1; 判断N & (N-1)==0？）

2.判断二进制数字N转化为M,需要转化多少位？ (异或算N,M不同位数; 在统计其中1的个数（e.g.再依赖本题思路）)